options:
  parameters:
    author: Barry Duggan
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: embed_py_ex
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Embedded Python Block Example
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '32000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 12]
    rotation: 0
    state: enabled
- name: blocks_file_sink_0
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'True'
    comment: ''
    file: /dev/stdout
    type: byte
    unbuffered: 'True'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [400, 100.0]
    rotation: 0
    state: true
- name: blocks_throttle_0
  id: blocks_throttle
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [280, 108.0]
    rotation: 0
    state: true
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Block demo\n\"\"\"\n\n#  epy_block_0.py\n\
      #  created 10/17/2019\n\nimport numpy as np\nfrom gnuradio import gr\n\nimport\
      \ pmt\n\ntextboxValue = \"\"\n\nclass my_sync_block(gr.sync_block):\n    \"\"\
      \"\n    reads input from a message port\n    outputs text\n    \"\"\"\n    def\
      \ __init__(self):\n        gr.sync_block.__init__(self,\n            name =\
      \ \"Embedded Python demo\",\n            in_sig = None,\n            out_sig\
      \ = [np.byte])\n        self.message_port_register_in(pmt.intern('msg_in'))\n\
      \        self.message_port_register_out(pmt.intern('clear_input'))\n       \
      \ self.set_msg_handler(pmt.intern('msg_in'), self.handle_msg)\n\n    def handle_msg(self,\
      \ msg):\n        global textboxValue\n\n        textboxValue = pmt.symbol_to_string\
      \ (msg)\n        # print (textboxValue)\n    \n    def work(self, input_items,\
      \ output_items):\n        global textboxValue\n\n        # get length of string\n\
      \        _len = len(textboxValue)\n        if (_len > 0):\n            # terminate\
      \ with LF\n            textboxValue += \"\\n\"\n            _len += 1\n    \
      \        # store elements in output array\n            for x in range(_len):\n\
      \                output_items[0][x] = ord(textboxValue[x])\n            textboxValue\
      \ = \"\"\n            self.message_port_pub(pmt.intern('clear_input'), pmt.intern(''))\n\
      \            return (_len)\n        else:\n            return (0)\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Embedded Python demo', 'my_sync_block', [], [('msg_in', 'message',
      1)], [('0', 'byte', 1), ('clear_input', 'message', 1)], '\n    reads input from
      a message port\n    outputs text\n    ', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [88, 108.0]
    rotation: 0
    state: true
- name: note_0
  id: note
  parameters:
    alias: ''
    comment: ''
    note: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [280, 16.0]
    rotation: 0
    state: true
- name: qtgui_edit_box_msg_0
  id: qtgui_edit_box_msg
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    gui_hint: ''
    is_pair: 'False'
    is_static: 'False'
    key: ''
    label: input
    maxoutbuf: '0'
    minoutbuf: '0'
    type: string
    value: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [88, 208.0]
    rotation: 180
    state: true

connections:
- [blocks_throttle_0, '0', blocks_file_sink_0, '0']
- [epy_block_0, '0', blocks_throttle_0, '0']
- [epy_block_0, clear_input, qtgui_edit_box_msg_0, val]
- [qtgui_edit_box_msg_0, msg, epy_block_0, msg_in]

metadata:
  file_format: 1
